% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/example_subclass.R
\name{CustomAPIClient}
\alias{CustomAPIClient}
\title{Example Custom API Resource Client}
\description{
CustomAPIClient extends HPCResourceClient but accepts resources in "custom.api" format.
This demonstrates how to subclass HPCResourceClient to create clients for specialized APIs.
}
\details{
This is an example of how to extend the HPCResourceClient to support a different format.
}
\examples{
\dontrun{
# Create a resource object with custom format
resource <- list(
  url = "http://localhost:9000",
  format = "custom.api",
  secret = "custom_api_key"
)

# Initialize client
client <- CustomAPIClient$new(resource)

# Access API methods
methods <- client$getMethods()
}

}
\section{Super classes}{
\code{\link[resourcer:ResourceClient]{resourcer::ResourceClient}} -> \code{\link[dsHPC:HPCResourceClient]{dsHPC::HPCResourceClient}} -> \code{CustomAPIClient}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CustomAPIClient-clone}{\code{CustomAPIClient$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="resourcer" data-topic="ResourceClient" data-id="asDataFrame"><a href='../../resourcer/html/ResourceClient.html#method-ResourceClient-asDataFrame'><code>resourcer::ResourceClient$asDataFrame()</code></a></span></li>
<li><span class="pkg-link" data-pkg="resourcer" data-topic="ResourceClient" data-id="asTbl"><a href='../../resourcer/html/ResourceClient.html#method-ResourceClient-asTbl'><code>resourcer::ResourceClient$asTbl()</code></a></span></li>
<li><span class="pkg-link" data-pkg="resourcer" data-topic="ResourceClient" data-id="close"><a href='../../resourcer/html/ResourceClient.html#method-ResourceClient-close'><code>resourcer::ResourceClient$close()</code></a></span></li>
<li><span class="pkg-link" data-pkg="resourcer" data-topic="ResourceClient" data-id="downloadFile"><a href='../../resourcer/html/ResourceClient.html#method-ResourceClient-downloadFile'><code>resourcer::ResourceClient$downloadFile()</code></a></span></li>
<li><span class="pkg-link" data-pkg="resourcer" data-topic="ResourceClient" data-id="exec"><a href='../../resourcer/html/ResourceClient.html#method-ResourceClient-exec'><code>resourcer::ResourceClient$exec()</code></a></span></li>
<li><span class="pkg-link" data-pkg="resourcer" data-topic="ResourceClient" data-id="getConnection"><a href='../../resourcer/html/ResourceClient.html#method-ResourceClient-getConnection'><code>resourcer::ResourceClient$getConnection()</code></a></span></li>
<li><span class="pkg-link" data-pkg="resourcer" data-topic="ResourceClient" data-id="getResource"><a href='../../resourcer/html/ResourceClient.html#method-ResourceClient-getResource'><code>resourcer::ResourceClient$getResource()</code></a></span></li>
<li><span class="pkg-link" data-pkg="dsHPC" data-topic="HPCResourceClient" data-id="executeJob"><a href='../../dsHPC/html/HPCResourceClient.html#method-HPCResourceClient-executeJob'><code>dsHPC::HPCResourceClient$executeJob()</code></a></span></li>
<li><span class="pkg-link" data-pkg="dsHPC" data-topic="HPCResourceClient" data-id="getJobOutput"><a href='../../dsHPC/html/HPCResourceClient.html#method-HPCResourceClient-getJobOutput'><code>dsHPC::HPCResourceClient$getJobOutput()</code></a></span></li>
<li><span class="pkg-link" data-pkg="dsHPC" data-topic="HPCResourceClient" data-id="getJobStatus"><a href='../../dsHPC/html/HPCResourceClient.html#method-HPCResourceClient-getJobStatus'><code>dsHPC::HPCResourceClient$getJobStatus()</code></a></span></li>
<li><span class="pkg-link" data-pkg="dsHPC" data-topic="HPCResourceClient" data-id="getMethods"><a href='../../dsHPC/html/HPCResourceClient.html#method-HPCResourceClient-getMethods'><code>dsHPC::HPCResourceClient$getMethods()</code></a></span></li>
<li><span class="pkg-link" data-pkg="dsHPC" data-topic="HPCResourceClient" data-id="initialize"><a href='../../dsHPC/html/HPCResourceClient.html#method-HPCResourceClient-initialize'><code>dsHPC::HPCResourceClient$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="dsHPC" data-topic="HPCResourceClient" data-id="jobSucceeded"><a href='../../dsHPC/html/HPCResourceClient.html#method-HPCResourceClient-jobSucceeded'><code>dsHPC::HPCResourceClient$jobSucceeded()</code></a></span></li>
<li><span class="pkg-link" data-pkg="dsHPC" data-topic="HPCResourceClient" data-id="uploadFile"><a href='../../dsHPC/html/HPCResourceClient.html#method-HPCResourceClient-uploadFile'><code>dsHPC::HPCResourceClient$uploadFile()</code></a></span></li>
<li><span class="pkg-link" data-pkg="dsHPC" data-topic="HPCResourceClient" data-id="waitForJob"><a href='../../dsHPC/html/HPCResourceClient.html#method-HPCResourceClient-waitForJob'><code>dsHPC::HPCResourceClient$waitForJob()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CustomAPIClient-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CustomAPIClient-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CustomAPIClient$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
